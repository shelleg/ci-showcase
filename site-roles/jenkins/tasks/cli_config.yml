---
# This file is not included by default. It can be included via a task:
# include: "cli_config_{{ ansible_os_family }}.yml"

# Enables the Jenkins CLI and configures the 'admin' account so that it can be
# used to connect to the CLI.

- name: "Create Jenkins Init Script Directory"
  # Reference: https://wiki.jenkins-ci.org/display/JENKINS/Post-initialization+script
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner:  "{{ jenkins_user }}"
    group:  "{{ jenkins_group }}"
    mode: 0755
  become: true

- name: Jenkins Script - Configure Slave Agent Port
  template:
    src: slaveAgentPort.groovy
    dest: "{{ jenkins_home }}/init.groovy.d/slaveAgentPort.groovy"
    owner:  "{{ jenkins_user }}"
    group:  "{{ jenkins_group }}"
    mode: 0744
  become: true
  notify:
    - "Restart Service 'jenkins'"

#- name: Generate SSH Keys for jenkins Service Account
#  user:
#    name: jenkins
#    generate_ssh_key: yes
#  become: true

- name: "Deploy ssh keys"
  copy:
    src: "{{ item }}"
    dest: /home/user/.ssh/
  with_items:
  - id_rsa.pub
  - id_rsa

- name: "Deploy ssh keys"
  copy:
    src: "{{ item }}"
    dest: "{{ jenkins_home }}/.ssh/"
  with_items:
  - id_rsa.pub
  - id_rsa

- name: "Deploy ssh keys"
  copy:
    src: "{{ item }}"
    dest: "{{ jenkins_home }}"
  with_items:
  - credentials.xml

- name: "Read SSH Public Key for jenkins Service Account"
  shell: cat "{{ jenkins_home }}/.ssh/id_rsa.pub"
  become: true
  changed_when: false
  register: jenkins_user_ssh_public_file

- name: "Parse SSH Public Key for jenkins Service Account"
  set_fact: jenkins_user_ssh_public_key="{{ jenkins_user_ssh_public_file.stdout_lines[0] }}"

- name: Jenkins Script - Configure SSH Keys for admin
  template:
    src: adminSshKeys.groovy
    dest: "{{ jenkins_home }}/init.groovy.d/adminSshKeys.groovy"
    owner:  "{{ jenkins_user }}"
    group:  "{{ jenkins_group }}"
    mode: 0744
  become: true
  notify:
    - "Restart Service 'jenkins'"

- name: Jenkins Script - Refresh Update Center
  template:
    src: updateCenterRefresh.groovy
    dest: "{{ jenkins_home }}/init.groovy.d/updateCenterRefresh.groovy"
    owner:  "{{ jenkins_user }}"
    group:  "{{ jenkins_group }}"
    mode: 0744
  become: true
  notify:
    - "Restart Service 'jenkins'"

# Fire any pending restart handlers now, as all of the above scripts will not 
# be run until Jenkins restarts, and are required in order for the CLI-using
# tasks below to work.
- meta: flush_handlers

# At this point (once the service is restarted), the CLI itself should be usable
# by the 'jenkins' system user (and its SSH keys).

- name: Create Jenkins CLI Directory
  file:
    path: /opt/jenkins
    state: directory
    owner:  "{{ jenkins_user }}"
    group:  "{{ jenkins_group }}"
    mode: 0755
  become: true

# The CLI comes "baked in" to the Jenkins WAR. Easiest way to extract it is 
# just to download it.
- name: Get Jenkins CLI
  get_url:
    url: "http://localhost:{{ jenkins_port }}{{ jenkins_context_path | default('') }}/jnlpJars/jenkins-cli.jar"
    dest: /opt/jenkins/jenkins-cli.jar
    owner:  "{{ jenkins_user }}"
    group:  "{{ jenkins_group }}"
    mode: 0444
  become: true

- pause:
    seconds: 10

- name: Verify CLI
  shell: "java -jar /opt/jenkins/jenkins-cli.jar -s http://localhost:{{ jenkins_port }}{{ jenkins_context_path | default('') }} who-am-i"
  register: cli_whoami
  become: true
  become_user: root
  changed_when: false
