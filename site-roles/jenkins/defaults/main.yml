---
# Variables in this file are automatically included into the role's context,
# and can be overridden by the active play.
# (Other files in this directory must be included via an `include_vars` task.)

jenkins_home: /var/lib/jenkins
jenkins_log_dir: /var/log/jenkins
jenkins_cache_dir: /var/cache/jenkins
work_dir: /opt/tikal

# Jenkins doesn't (and shouldn't) run as root, so this must be over 1024.
jenkins_port: 8080

#jenkins_version: latest
# The context path that Jenkins will be hosted at, e.g. '/foo' in 
# 'http://localhost:8080/foo'. Leave as '' to host at root path.
jenkins_context_path: ''

# The list of possible Jenkins admin users (and their security realm). At 
# Jenkins startup, the current security realm will be checked, and the first 
# user in this list that is found to match that security realm will have their 
# SSH key set to allow SSH/CLI logins using the primary SSH key of the server's
# `jenkins` system user account. Any other Jenkins users with that SSH key set 
# will have it removed, to prevent lookup conflicts.
# If you're using an alternative authorization system (i.e. security realm),
# this list will likely need to be modified to include the user ID of one of a
# valid user from that realm (unless it also happens to have an `admin` 
# account).

jenkins_admin_username: ostkl-admin
jenkins_admin_password: qwe123

jenkins_admin_users:
  - 'hudson.security.HudsonPrivateSecurityRealm:admin'

# The plugins that the Jenkins 2.0 setup wizard installs by default. Currently, 
# the best place to find this list seems to be in the source, here:
# https://github.com/jenkinsci/jenkins/blob/master/war/src/main/js/api/plugins.js
jenkins_plugins_recommended: 
  - cloudbees-folder
  - antisamy-markup-formatter
  - github
  - workflow-basic-steps
  - matrix-project
  - blueocean-pipeline-api-impl
  - pipeline-milestone-step
  - nodejs
  - blueocean-web
  - blueocean-autofavorite
  - workflow-job
  - durable-task
  - mapdb-api
  - workflow-scm-step
  - envinject
  - maven-plugin
  - build-timeout
  - git-server
  - blueocean-jwt
  - credentials
  - blueocean-commons
  - docker-workflow
  - metrics
  - workflow-api
  - plain-credentials
  - windows-slaves
  - pipeline-stage-view
  - blueocean-rest
  - multiple-scms
  - blueocean-events
  - ws-cleanup
  - authentication-tokens
  - blueocean-display-url
  - ssh-credentials
  - pipeline-graph-analysis
  - variant
  - sse-gateway
  - scm-api
  - bouncycastle-api
  - workflow-cps-global-lib
  - gradle
  - blueocean-i18n
  - ace-editor
  - workflow-multibranch
  - build-flow-plugin
  - workflow-durable-task-step
  - git-client
  - credentials-binding
  - junit
  - ssh-slaves
  - pam-auth
  - handlebars
  - description-setter
  - blueocean-personalization
  - favorite
  - pipeline-build-step
  - blueocean-dashboard
  - blueocean-rest-impl
  - display-url-api
  - script-security
  - github-api
  - momentjs
  - branch-api
  - email-ext
  - jquery-detached
  - subversion
  - ant
  - pipeline-model-api
  - conditional-buildstep
  - pipeline-model-definition
  - mailer
  - run-condition
  - workflow-aggregator
  - workflow-step-api
  - github-branch-source
  - pipeline-model-declarative-agent
  - structs
  - parameterized-trigger
  - pipeline-input-step
  - seed
  - resource-disposer
  - javadoc
  - timestamper
  - pipeline-stage-step
  - github-organization-folder
  - external-monitor-job
  - workflow-cps
  - token-macro
  - job-dsl
  - blueocean
  - matrix-auth
  - ldap
  - jackson2-api
  - clone-workspace-scm
  - docker-commons
  - icon-shim
  - pipeline-rest-api
  - git
  - blueocean-config
  - workflow-support
  - job-node-stalker
  - ansicolor
  - nested-view
  - jquery
  - build-pipeline-plugin



# The additional plugins that users of this role would like to be installed
# (must be overridden).
jenkins_plugins_extra:


jenkins_user: "{{ context_user |d('user')}}"
jenkins_group: "{{ context_group |d('user')}}"